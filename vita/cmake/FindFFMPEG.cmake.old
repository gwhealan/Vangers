# Find FFMPEG

# find_path(AVUTIL_INCLUDE_DIR
# NAME avutil.h
#     PATH_SUFFIXES
#         libavutil
#         ffmpeg
# )

find_path(AVCODEC_INCLUDE_DIR
    NAME avcodec.h
    PATH_SUFFIXES
        libavcodec
        ffmpeg
)

find_path(AVFORMAT_INCLUDE_DIR
    NAME avformat.h
    PATH_SUFFIXES
        libavformat
        ffmpeg
)

# find_path(AVFILTER_INCLUDE_DIR
# NAME avfilter.h
#     PATH_SUFFIXES
#         libavfilter
#         ffmpeg
# )
# 
# find_path(AVDEVICE_INCLUDE_DIR
#     NAME avdevice.h
#     PATH_SUFFIXES
#         libavdevice
#         ffmpeg
# )
# 

set(FFMPEG_INCLUDE_DIRS
    ${AVUTIL_INCLUDE_DIR}
    ${AVCODEC_INCLUDE_DIR}
    ${AVFORMAT_INCLUDE_DIR}
    ${AVFILTER_INCLUDE_DIR}
    ${AVDEVICE_INCLUDE_DIR}
)

find_library(AVUTIL_LIBRARY avutil)
find_library(AVCODEC_LIBRARY avcodec)
find_library(AVFORMAT_LIBRARY avformat)
#find_library(AVFILTER_LIBRARY avfilter)
#find_library(AVDEVICE_LIBRARY avdevice)
find_library(SWRESAMPLE_LIBRARY swresample)

#dependencies
find_library(LAME_LIBRARY mp3lame)
find_library(FLAC_LIBRARY FLAC)
find_library(OPUS_LIBRARY opus)
find_library(OPUSFILE_LIBRARY opusfile)
find_library(OPUSURL_LIBRARY opusurl)

if (NOT LAME_LIBRARY)
    message(FATAL_ERROR "Please install lame (vdpm lame)")
endif()
if (NOT FLAC_LIBRARY)
    message(FATAL_ERROR "Please install flac (vdpm flac)")
endif()
if (NOT (OPUS_LIBRARY AND OPUSFILE_LIBRARY AND OPUSURL_LIBRARY))
    message(FATAL_ERROR "Please install opus (vdpm opus)")
endif()

if (AVCODEC_LIBRARY)
    if (SWRESAMPLE_LIBRARY)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${AVCODEC_LIBRARY}
        ${SWRESAMPLE_RESAMPLE}
    )
    message(STATUS "avcodec:  ${AVCODEC_LIBRARY}")
    else()
        message(STATUS "")
    endif()
else()
    message(STATUS "Failed to find avcodec.")
endif()

if (AVFORMAT_LIBRARY)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${AVFORMAT_LIBRARY}
    )
    message(STATUS "avformat: ${AVFORMAT_LIBRARY}")
else()
    message(STATUS "Failed to find avformat.")
endif()

if (AVUTIL_LIBRARY)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${AVUTIL_LIBRARY}
    )
    message(STATUS "avutil:   ${AVUTIL_LIBRARY}")
else()
    message(STATUS "Failed to find avutil.")
endif()

if (AVFILTER_LIBRARY)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${AVFILTER_LIBRARY}
    )
    message(STATUS "avfilter: ${AVFILTER_LIBRARY}")
else()
    message(STATUS "Failed to find avfilter.")
endif()

if (AVDEVICE_LIBRARY)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${AVDEVICE_LIBRARY}
    ) 
    message(STATUS "avdevice: ${AVDEVICE_LIBRARY}")  
else()
    message(STATUS "Failed to find avdevice.")
endif()

if (FFMPEG_LIBRARIES)
    set(FFMPEG_LIBRARIES
        ${FFMPEG_LIBRARIES}
        ${LAME_LIBRARY}
        ${FLAC_LIBRARY}
        ${OPUS_LIBRARY}
        ${OPUSFILE_LIBRARY}
        ${OPUSURL_LIBRARY}
        pthread
    )
endif()

message(STATUS "FFMPEG: ${FFMPEG_LIBRARIES}")

find_package(PackageHandleStandardArgs QUIET REQUIRED)
find_package_handle_standard_args(FFMPEG
    REQUIRED_VARS FFMPEG_INCLUDE_DIRS FFMPEG_LIBRARIES
)